{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\azork\\\\Desktop\\\\quotemachine\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { connect } from 'react-redux';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons';\nserviceWorker.register(); //TYPE's\n\nconst quote = \"quote\"; //ACTION CREATORS\n\nconst newQuote = () => {\n  return {\n    type: quote\n  };\n}; //initialState's\n\n\nconst initialColors = ['#32a852', '#98a832', '#a85532', '#a8328b', '#3e32a8'];\nconst randomNum = Math.floor(Math.random() * Math.floor(10)); //REDUCERS\n\nconst randomReducer = (state = randomNum, action) => {\n  switch (action.type) {\n    case quote:\n      state = Math.floor(Math.random() * Math.floor(10));\n      return state;\n\n    default:\n      return state;\n  }\n}; //STORE\n\n\nconst store = createStore(randomReducer);\n\nclass RandomQuote extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //COLORS\n      colors: ['#32a852', '#98a832', '#a85532', '#a8328b', '#3e32a8', '#c20606', '#a69c98', '#add609', '#09d687', '#b01c5a'],\n      //QUOTES AND AURORS\n      quotes: [{\n        text: 'Without music, life would be a mistake.',\n        autor: ' Friedrich Nietzsche'\n      }, {\n        text: \"To go wrong in one's own way is better than to go right in someone else's.\",\n        autor: ' Fyodor Dostoevsky'\n      }, {\n        text: \"Be who you are and say what you feel, because those who mind don’t matter and those who matter don’t mind.\",\n        autor: ' Bernard M. Baruch'\n      }, {\n        text: \"Have the courage to follow your heart and intuition. They somehow already know what you truly want to become.\",\n        autor: ' Steve Jobs'\n      }, {\n        text: \"We must not allow other people’s limited perceptions to define us.\",\n        autor: ' Virginia Satir'\n      }, {\n        text: \"Success is a lousy teacher. It seduces smart people into thinking they can’t lose.\",\n        autor: ' Bill Gates'\n      }, {\n        text: \"Tact is the art of making a point without making an enemy.\",\n        autor: ' Isaac Newton'\n      }, {\n        text: \"I don't care that they stole my idea . . I care that they don't have any of their own\",\n        autor: ' Nikola Tesla'\n      }, {\n        text: \"Live as if you were to die tomorrow. Learn as if you were to live forever.\",\n        autor: ' Mahatma Gandhi'\n      }, {\n        text: \"There are no philosophical problems, there is only a suite of interconnected linguistic cul de sacs created by language's inability to reflect the truth.\",\n        autor: ' Victor Pelevin'\n      }]\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.props.submitNewQuote();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"quote-box-wrapper\",\n      style: {\n        backgroundColor: this.state.colors[this.props.randomNumber]\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"quote-box\",\n      style: {\n        backgroundColor: 'white',\n        maxWidth: '50vw'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      id: \"text\",\n      style: {\n        color: this.state.colors[this.props.randomNumber]\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"\\\"\", this.state.quotes[this.props.randomNumber].text), React.createElement(\"h3\", {\n      id: \"author\",\n      style: {\n        color: this.state.colors[this.props.randomNumber]\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"-\", this.state.quotes[this.props.randomNumber].autor), React.createElement(\"div\", {\n      id: \"button-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      style: {\n        color: this.state.colors[this.props.randomNumber]\n      },\n      href: \"https://twitter.com/intent/tweet?text=\".concat(this.state.quotes[this.props.randomNumber].text + this.state.quotes[this.props.randomNumber].autor),\n      id: \"tweet-quote\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fab fa-twitter fa-3x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      id: \"new-quote\",\n      onClick: this.handleClick,\n      style: {\n        backgroundColor: this.state.colors[this.props.randomNumber]\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"NEW QUOTE\"))));\n  }\n\n} //MAP's\n\n\nconst mapStateToProps = state => {\n  return {\n    randomNumber: state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    submitNewQuote: () => {\n      dispatch(newQuote());\n    }\n  };\n}; //connect\n\n\nconst WrappedMainComponent = connect(mapStateToProps, mapDispatchToProps)(RandomQuote); //RENDER\n\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 159\n  },\n  __self: this\n}, React.createElement(WrappedMainComponent, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 160\n  },\n  __self: this\n})), document.getElementById(\"root\"));","map":{"version":3,"sources":["C:/Users/azork/Desktop/quotemachine/src/index.js"],"names":["React","ReactDOM","serviceWorker","connect","Provider","createStore","applyMiddleware","combineReducers","FontAwesomeIcon","faCoffee","register","quote","newQuote","type","initialColors","randomNum","Math","floor","random","randomReducer","state","action","store","RandomQuote","Component","constructor","props","colors","quotes","text","autor","handleClick","bind","submitNewQuote","render","backgroundColor","randomNumber","maxWidth","color","mapStateToProps","mapDispatchToProps","dispatch","WrappedMainComponent","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {connect} from 'react-redux';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons'\r\nserviceWorker.register();\r\n\r\n\r\n\r\n\r\n\r\n//TYPE's\r\nconst quote = \"quote\";\r\n\r\n\r\n\r\n//ACTION CREATORS\r\nconst newQuote = () =>{\r\n\treturn {\r\n\t\ttype: quote\r\n\t}\r\n}\r\n\r\n\r\n\r\n//initialState's\r\nconst initialColors = [\r\n'#32a852','#98a832',\r\n'#a85532','#a8328b',\r\n'#3e32a8'\r\n];\r\n\r\n\r\n    const randomNum = Math.floor(Math.random() * Math.floor(10));\r\n\r\n\r\n//REDUCERS\r\nconst randomReducer = (state = randomNum, action) =>{\r\nswitch(action.type){\r\n\tcase quote:\r\n\t\tstate = Math.floor(Math.random() * Math.floor(10))\r\n\t\treturn state;\r\n\tdefault:\r\n\t\treturn state ;\r\n}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n//STORE\r\nconst store = createStore(randomReducer);\r\n\r\nclass RandomQuote extends React.Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\t//COLORS\r\n\t\tcolors : [ '#32a852','#98a832','#a85532','#a8328b','#3e32a8','#c20606','#a69c98','#add609','#09d687','#b01c5a'],\r\n\t\t\t//QUOTES AND AURORS\r\n\t\tquotes: [\r\n\t\t{\r\n\t\ttext:'Without music, life would be a mistake.',\r\n\t\tautor:' Friedrich Nietzsche'\r\n\t\t},\r\n\t\t{\r\n\t\ttext:\"To go wrong in one's own way is better than to go right in someone else's.\",\r\n\t\tautor:' Fyodor Dostoevsky'\t\r\n\t\t},\r\n\t\t{\r\n\t\ttext:\"Be who you are and say what you feel, because those who mind don’t matter and those who matter don’t mind.\",\r\n\t\tautor:' Bernard M. Baruch'\t\r\n\t\t},\r\n\t\t{\r\n\t\ttext:\"Have the courage to follow your heart and intuition. They somehow already know what you truly want to become.\",\r\n\t\tautor:' Steve Jobs'\t\r\n\t\t},\r\n\t\t{\r\n\t\ttext:\"We must not allow other people’s limited perceptions to define us.\",\r\n\t\tautor:' Virginia Satir'\t\r\n\t\t},\r\n\t\t{\r\n\t\t\ttext:\"Success is a lousy teacher. It seduces smart people into thinking they can’t lose.\",\r\n\t\t\tautor:' Bill Gates'\t\r\n\t\t},\r\n\t\t{\r\n\t\t\ttext:\"Tact is the art of making a point without making an enemy.\",\r\n\t\t\tautor:' Isaac Newton'\t\r\n\t\t},\r\n\t\t{\r\n\t\t\ttext:\"I don't care that they stole my idea . . I care that they don't have any of their own\",\r\n\t\t\tautor:' Nikola Tesla'\t\r\n\t\t},\r\n\t\t{\r\n\t\t\ttext:\"Live as if you were to die tomorrow. Learn as if you were to live forever.\",\r\n\t\t\tautor:' Mahatma Gandhi'\t\r\n\t\t},\r\n\t\t{\r\n\t\t\ttext:\"There are no philosophical problems, there is only a suite of interconnected linguistic cul de sacs created by language's inability to reflect the truth.\",\r\n\t\t\tautor:' Victor Pelevin'\t\r\n\t\t}\r\n\t\t]\r\n\t};\r\n\t\tthis.handleClick = this.handleClick.bind(this);\r\n\t}\r\n\thandleClick(){\r\n\t\tthis.props.submitNewQuote();\r\n\r\n\r\n\t}\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div id=\"quote-box-wrapper\" style={{backgroundColor:this.state.colors[this.props.randomNumber]}}>\r\n  \t\t\t<div id=\"quote-box\" style={{backgroundColor:'white', maxWidth: '50vw'}}>\r\n\t\t\t<h1 id=\"text\" style={{color:this.state.colors[this.props.randomNumber]}}>\"{this.state.quotes[this.props.randomNumber].text}</h1>\r\n\t\t\t<h3 id=\"author\" style={{color:this.state.colors[this.props.randomNumber]}}>-{this.state.quotes[this.props.randomNumber].autor}</h3>\r\n\t\t\t  <div id=\"button-wrapper\">\r\n\t\t\t\t<a style={{color:this.state.colors[this.props.randomNumber]}} href={`https://twitter.com/intent/tweet?text=${this.state.quotes[this.props.randomNumber].text + this.state.quotes[this.props.randomNumber].autor}`} id=\"tweet-quote\"><i className=\"fab fa-twitter fa-3x\"></i></a>\r\n\t\t\t\t<button  id='new-quote' onClick={this.handleClick} style={{backgroundColor:this.state.colors[this.props.randomNumber]}}>NEW QUOTE</button>\r\n\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\n\r\n\r\n//MAP's\r\nconst mapStateToProps = (state) =>{\r\nreturn {\r\n\t\trandomNumber: state\r\n}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\nreturn {\r\n\t\tsubmitNewQuote: () => {\r\n\t\t\tdispatch(newQuote());\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\n//connect\r\nconst WrappedMainComponent = connect(mapStateToProps,mapDispatchToProps)(RandomQuote);\r\n\r\n\r\n\r\n//RENDER\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t<WrappedMainComponent/>\r\n\t</Provider>, \r\n\tdocument.getElementById(\"root\"))\r\n"]},"metadata":{},"sourceType":"module"}